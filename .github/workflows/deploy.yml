name: Deploy to AWS ECS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_ACCOUNT_ID: 502236492999
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: shared-notes-api
  ECS_SERVICE: shared-notes-api-service
  ECS_CLUSTER: shared-notes-cluster
  ECS_TASK_DEFINITION: ecs-task-definition.prod.json
  CONTAINER_NAME: shared-notes-api
  API_URL: https://d2w8ulo83u5tax.cloudfront.net

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        
        # Push the image
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
        
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Update task definition with new image
      id: task-def
      run: |
        # Update the task definition with new image
        sed "s|${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/shared-notes-api:latest|${{ steps.build-image.outputs.image }}|g" ${{ env.ECS_TASK_DEFINITION }} > task-definition-updated.json
        
        # Register new task definition
        TASK_DEFINITION_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://task-definition-updated.json \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)
        
        echo "task-definition-arn=$TASK_DEFINITION_ARN" >> $GITHUB_OUTPUT

    - name: Deploy Amazon ECS task definition
      run: |
        # Update ECS service with new task definition
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --task-definition ${{ steps.task-def.outputs.task-definition-arn }}
        
        # Wait for deployment to complete
        echo "Waiting for service to stabilize..."
        aws ecs wait services-stable \
          --cluster ${{ env.ECS_CLUSTER }} \
          --services ${{ env.ECS_SERVICE }}